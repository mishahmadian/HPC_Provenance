#|------------------------------------------------------|
#|              Provenance Server Config                |
#|                                                      |
#|       High Performance Computing Center (HPCC)       |
#|               Texas Tech University                  |
#|                                                      |
#|       Misha Ahmadian (misha.ahmadian@ttu.edu)        |
#|------------------------------------------------------|
#
[lustre]
# The hostname of MGS/MDSs servers (comma-separated list)
mds_hosts = mgs
# The hostname of OSSs servers (comma-separated list)
oss_hosts = oss1,oss2
# List all the jobstats var init (comma-separated list)
jobid_vars = genius_uge_
# Define the reation between MDTs and ther Mount Points
mdt_mnt = [{
            "test-MDT0000": ["/lustre/test"]
          }]

[rabbitmq]
server = genius
port = 5672
username = monitoring
password = Lu5t3r
vhost = /monitoring
# Number of prefetched data into memory before they get processed.
# This will help a new thread picks up the process if load is hight
prefetch = 2
# Desired connection heartbeat timeout
heartbeat = 600
# Blocked connection (e.g. low resources, etc.) timeout
timeout = 300

[io_listener]
exchange = jobstat
queue = jobstat

[changelogs]
# List of allowed file operation that should be captured (comma-separated list)
files_ops = OPEN,CLOSE,CREAT,UNLNK,SLINK,SATTR,RENME
# (parallel): defines the number of process that can be run concurrently for collecting
# File Operations per user per job per MDT. The best practice is to set
#       parallel = # of MDT targets
# But it depend how many cores need to be occupied at the same time.
# (parallel = {n < 1}  --> meant all the CPU cores will be used)
parallel = 10
# (interval): Depaly interval (seconds) between each File OP collection calls
# the shorter the interval, the faster the data collection but bussier process(s) on server
interval = 2
# List of all "fsname-MDTtargets" (comma-separated list)
mdt_targets = test-MDT0000
# (user): comma separated list of lustre user name(s) that Lustre Changelog has been registered with. Example:
#
#   mds# lctl --device lustre-MDT0000 changelog_register  --> register ChangeLog user on mds for lustre-MDT0000
#   mds# lctl get_param lustre-MDT0000.changelog_users    --> find the registered user fo lustre-MDT0000 on mds
#
#  Make sure the user names are in the same order of their MDT targets defined under [lustre]->mdt_targets
#
users = cl3
# Filter out the file operations for non-job processes (True/False)
filter_procs = True

[aggregator]
interval = 10

[uge]
# UGERest Server is in the same server that runs the q_master (comma separated list)
clusters = genius
addresses = localhost
ports = 8182
spool_dirs = /export/uge/default/spool
# The intervals between sending RPC request to the server and collectiong
# accounting data for a list of jobs.
acct_interval = 5

[mongodb]
# MongoDB configuration
host = localhost
port = 27017
auth_mode = SCRAM-SHA-1
username = provenance
password = Pr0^3Nance
database = provenance

[influxdb]
# Influxdb configuration
host = localhost
port = 8086
username = provenance
password = Pr0^3Nance
database = provenance
tzone = America/Chicago